#include "pch.h"
#include "Resheto.h"

//using std::vector;

namespace MyNamespace {
	Resheto::Resheto() //конструктор и деструктор класса для данной задачи не нужны
	{
	}

	Resheto::~Resheto()
	{
	}


	vector<int> Resheto::Search(int n)
	{
		vector<int> allNums;//"Вектор" всех чисел до заданного числа "n"

		for (int i = 0; i <= n; i++)//Циклическое заполнение (происходит с нуля для простоты вычислений)
			allNums.push_back(i);

		allNums[1] = 0;//обработка крайних элементов
		int i = 2;//основной индекс

		while (i <= n)//алгоритм Решето
		{
			//если значение ячейки не было обнулено,
			//то в ней содержится простое число
			if (allNums[i] != 0)
			{
				//первое кратное ему будет в 2 раза больше
				int j = i + i;
				while (j <= n)
				{
					//это число составное, поэтому заменяем нулем
					allNums[j] = 0;
					//следущее число, кратное "i" больше на "i"
					j = j + i;
				}
			}
			i += 1;
		}
		
		//1) отбор простых чисел в новый "вектор" можно произвести сразу
		//2) можно вместо "обнуления" использовать "erase"
		//но мне и так надоело это рассписывать ☻

		vector<int> nums;//"Вектор" простых чисел до заданного числа "n"
		for (int num : allNums)//Циклическое заполнение
		{
			if (num != 0)//Отбор значений не равных нулю
				nums.push_back(num);
		}

		return nums;//Возврат "Вектора" простых чисел
	}
};
